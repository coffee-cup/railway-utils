name: Bump Version

on:
  workflow_call:
    inputs:
      bump_type:
        required: true
        type: string
        description: "Version bump type: patch, minor, or major"
    outputs:
      new_version:
        description: "The new version number"
        value: ${{ jobs.bump.outputs.new_version }}

jobs:
  bump:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest version
        id: get_version
        run: |
          LATEST_TAG=$(git tag -l 'v*.*.*' | sort -V | tail -n1)
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="v0.0.0"
          fi
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "Found latest version: $LATEST_TAG"

      - name: Calculate new version
        id: version
        run: |
          LATEST="${{ steps.get_version.outputs.latest_tag }}"
          VERSION=${LATEST#v}

          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

          case "${{ inputs.bump_type }}" in
            patch)
              PATCH=$((PATCH + 1))
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            *)
              echo "Invalid bump type: ${{ inputs.bump_type }}"
              exit 1
              ;;
          esac

          NEW_VERSION="v${MAJOR}.${MINOR}.${PATCH}"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "major=$MAJOR" >> $GITHUB_OUTPUT
          echo "minor=$MINOR" >> $GITHUB_OUTPUT
          echo "patch=$PATCH" >> $GITHUB_OUTPUT

          echo "Calculated new version: $NEW_VERSION"

      - name: Create git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          NEW_VERSION="${{ steps.version.outputs.new_version }}"
          git tag -a "$NEW_VERSION" -m "Release $NEW_VERSION"
          git push origin "$NEW_VERSION"

          echo "Created and pushed tag: $NEW_VERSION"
